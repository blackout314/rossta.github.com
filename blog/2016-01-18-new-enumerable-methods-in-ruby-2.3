<!doctype html>
<html>
  <head>
    <title>New Enumerable methods in Ruby 2.3 - rossta.net</title>
<meta name="description" content="New Enumerable methods in Ruby 2.3" />
<meta name="keywords" content="Ross Kaffenberger, software, software developer, software engineering, computer programming, web development, test driven development, TDD, Ruby, Javascript, Ruby on Rails, Rails, RSpec, Clojure, HTML, CSS" />
<meta name="site" content="rossta.net" />
<meta property="og:site_name" content="rossta.net" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:creator" content="Ross Kaffenberger" />
<meta name="twitter:description" content="New Enumerable methods in Ruby 2.3" />
<meta name="twitter:image:src" content="https://rossta.net/assets/images/blog/stock/dark-brown-milk-candy-pexels-photo.jpg" />
<meta name="twitter:title" content="New Enumerable methods in Ruby 2.3" />
<meta property="og:description" content="New Enumerable methods in Ruby 2.3" />
<meta property="og:image" content="https://rossta.net/assets/images/blog/stock/dark-brown-milk-candy-pexels-photo.jpg" />
<meta property="og:title" content="New Enumerable methods in Ruby 2.3" />
    <meta charset="utf-8" />
    <meta http-equiv='X-UA-Compatible' content='IE=edge;chrome=1' />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <script type="text/javascript" src="//use.typekit.net/ned0mml.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
    <link href="/assets/stylesheets/all.css?1452638140" rel="stylesheet" />
    <script src="/assets/javascripts/head.js?1445744814"></script>
    <link href="/assets/images/favicon.ico" rel="icon" type="image/ico" />
  </head>
  <body id="application" class="typekit">
    <nav id="welcome-nav" class="top-bar" data-topbar>
  <ul class="title-area">
    <li class="name">
      <h1><a class="logo" href="/">rossta.net</a></h1>
    </li>
    <li class="toggle-topbar menu-icon"><a href="#">Menu</a></li>
  </ul>

  <section class="top-bar-section">
    <ul class="left">
      <li class="nav"><a href="/blog">blog</a></li>
      <li class="nav"><a href="/about">about</a></li>
      <li class="nav"><a href="/projects">projects</a></li>
      <li class="nav"><a href="/feed.xml">feed</a></li>
    </ul>
  </section>
</nav>

    <div class="row">
      <section id="main" role="main" class="large-12 small-12 columns">
        <p>You may have heard <a href="https://www.ruby-lang.org/en/news/2015/12/25/ruby-2-3-0-released/">Ruby 2.3 dropped</a> on Christmas this past year. Two new <code>Enumerable</code> instance methods were added, <code>grep_v</code> and <code>chunk_while</code> and each are variations on enumerable methods we already had. We&rsquo;ll dissect both here below.</p>

<h3>Inverted grep</h3>

<h4>Before you can grep, you must triple equals</h4>

<p>Grep allows you to select members of a collection that match an expression. That expression is <code>some_object === item</code>.</p>

<p>What does &ldquo;triple equals&rdquo; do? Well, in Ruby, as in most languages, that answer
is complicated. Since we can define this method however we want in our own
classes, it can mean anything. But, most commonly:</p>

<blockquote>
<p>if <code>a</code> === <code>b</code>, then <code>b</code> is a subset of <code>a</code></p>
</blockquote>

<p>How about a few examples.</p>

<pre><code class="ruby">Symbol === :foo   # =&gt; true, :foo is a symbol
String === &quot;foo&quot;  # =&gt; &quot;foo&quot;, is a string
Symbol === &quot;foo&quot;  # =&gt; &quot;foo&quot;, is not a symbol
String === :foo   # =&gt; :foo, is not a string

/foo/ === &quot;foobar&quot; # =&gt; true, &quot;foobar&quot; matches /foo/
(1..10) === 2       # =&gt; true, 2 is in the range 1..10
</code></pre>

<p>We <strong>could</strong> use <code>select</code> to filter out items of a collection with the <code>===</code> like
so:</p>

<pre><code class="ruby">1.upto(20).select { |i| (6..10) === i } # =&gt; [6, 7, 8, 9, 10]
</code></pre>

<p>But this is what <code>grep</code> is for:</p>

<pre><code class="ruby">1.upto(10).grep(6..8) # =&gt; [6, 7, 8]
</code></pre>

<p>So <code>grep</code> is like saying &ldquo;gimme all the items in the given set&rdquo;.</p>

<p>To get all the items <em>not</em> included, use <code>grep_v</code>:</p>

<pre><code class="ruby">1.upto(10).grep_v(6..8)
=&gt; [1, 2, 3, 4, 5, 9, 10]
</code></pre>

<p>Define <code>===</code> on any class or object to take advantage of filtering with <code>grep</code> and <code>grep_v</code> in other contexts.</p>

<h3>Chunk While</h3>

<h4>Chunk</h4>

<h4>Group By</h4>

<h4>Chunk while three ways</h4>

      </section>
    </div>
      <div id="zen">
    <div class="row">
      <div class="enlightenment large-12 columns"></div>
    </div>
  </div>

    <div class="row">
      <footer>
        <section class="large-12 columns center-inline-list">
          <ul class="inline-list">
  <li><a href="mailto:ross@rossta.net">email</a></li>
  <li><a href="https://twitter.com/rossta">twitter</a></li>
  <li><a href="https://github.com/rossta">github</a></li>
  <li><a href="https://stackoverflow.com/users/771838/rossta?tab=profile">stackoverflow</a></li>
  <li><a href="https://www.linkedin.com/in/rosskaffenberger">linkedin</a></li>
</ul>

        </section>
      </footer>
    </div>
    <script src="/assets/javascripts/all.js?1450447615"></script>
        <script type="text/javascript">
      $(function() {
         $.zen(function(toBe) { $('#zen').find('.enlightenment').text(toBe); });
      });
    </script>

    <script type="text/javascript">
!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.1.0";
analytics.load("NdBtrprkAGAjQryMShljRdVf90saElAU");
analytics.page()
}}();
</script>

<script>
  $(function() {
    if ($ && $.tracking) {
      var traits = $.tracking.traits;
      var events = $.tracking.events;

      analytics.identify(traits);
      Object.keys(events).forEach(function(name, i) {
        analytics.track(name, events[name]);
      });

    } else {
      analytics.identify();
    }
  });
</script>

  </body>
</html>
